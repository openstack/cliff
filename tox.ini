[tox]
minversion = 3.1.0
envlist = py3,pep8
ignore_basepython_conflict = True

# ===================================================================
# tox -e [py38|py39|py310]
# ...................................................................
[testenv]
description = testenv configuration for {basepython}
basepython = python3
# if user has limited permission account this will still work
install_command = pip3 --trusted-host pypi.org \
    --trusted-host files.pythonhosted.org \
    --disable-pip-version-check \
    --no-cache-dir \
    install {opts} {packages}
setenv =
  VIRTUAL_ENV={envdir}
  OS_STDOUT_CAPTURE=1
  OS_STDERR_CAPTURE=1
  OS_TEST_TIMEOUT=60
distribute = False
commands =
  python -c 'print("\n"+(80*"=")+"\n"+"{basepython} testenv"+"\n"+(80*"-"))'
  python --version
  python -c 'print("\n"+(80*"."))'
  stestr run {posargs}
  python -c 'print("\n"+(80*"-"))'
  stestr slowest
  python -c 'print((80*"=")+"\n")'  
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt

# ===================================================================
# tox -e pep8
# ...................................................................
[testenv:pep8]
deps =
  -r{toxinidir}/test-requirements.txt
  flake8
commands =
  python -c 'print("\n"+(80*"=")+"\n"+"{basepython} pep8"+"\n"+(80*"-"))'
  flake8 --version
  python -c 'print("\n"+(80*"."))'
  flake8 cliff doc/source/conf.py setup.py
  python -c 'print("\n"+(80*"-"))'

  # Run security linter
  bandit --version
  python -c 'print("\n"+(80*"."))'
  bandit -c bandit.yaml -r cliff -x tests -n5
  python -c 'print((80*"=")+"\n")'  

# ===================================================================
# tox -e venv
# ...................................................................
[testenv:venv]
# TODO(modred) remove doc/requirements.txt once the openstack-build-sphinx-docs
# job is updated.
deps =
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands = 
  python -c 'print("\n"+(80*"=")+"\n"+"{basepython} venv"+"\n"+(80*"-"))'
  {posargs}
  python -c 'print((80*"=")+"\n")'  

# ===================================================================
# tox -e neutronclient-tip
# ...................................................................
[testenv:neutronclient-tip]
deps = os:openstack/python-neutronclient:python-neutronclient
commands = 
  python -c 'print("\n"+(80*"=")+"\n"+"{basepython} neutronclient-tip"+"\n"+(80*"-"))'
  {toxinidir}/integration-tests/neutronclient-tip.sh {envdir}
  python -c 'print((80*"=")+"\n")'  

# ===================================================================
# tox -e openstackclient-tip
# ...................................................................
[testenv:openstackclient-tip]
deps = os:openstack/python-openstackclient:python-openstackclient
commands = 
  python -c 'print("\n"+(80*"=")+"\n"+"{basepython} openstackclient-tip"+"\n"+(80*"-"))'
  {toxinidir}/integration-tests/openstackclient-tip.sh {envdir}
  python -c 'print((80*"=")+"\n")'  

# ===================================================================
# tox -e docs
# ...................................................................
[testenv:docs]
deps = -r{toxinidir}/doc/requirements.txt
commands = 
  python -c 'print("\n"+(80*"=")+"\n"+"{basepython} docs"+"\n"+(80*"-"))'
  sphinx-build -W -b html doc/source doc/build/html
  python -c 'print((80*"=")+"\n")'  

# ===================================================================
# tox -e cover
# ...................................................................
[testenv:cover]
setenv =
  {[testenv]setenv}
  PYTHON=coverage run --source cliff --parallel-mode
commands =
  python -c 'print("\n"+(80*"=")+"\n"+"{basepython} docs"+"\n"+(80*"-"))'
  stestr run {posargs}
  python -c 'print("\n"+(80*"-"))'
  coverage combine
  python -c 'print("\n"+(80*"-"))'
  coverage html -d cover
  python -c 'print("\n"+(80*"-"))'
  coverage xml -o cover/coverage.xml
  python -c 'print((80*"=")+"\n")'  
